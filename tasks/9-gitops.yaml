apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: ibm-gitops
  annotations:
    description: Publishes the helm chart configuration to the provided gitops repo to trigger downstream deployments
    app.openshift.io/description: Publishes the helm chart configuration to the provided gitops repo to trigger downstream deployments
    app.openshift.io/vcs-uri: https://github.com/IBM/ibm-garage-tekton-tasks
    app.openshift.io/vcs-ref: master
  labels:
    version: 0.0.0
spec:
  params:
    - name: app-name
      default: ""
    - name: version
      default: ""
    - name: git-branch
      default: master
    - name: source-dir
      default: /source
    - name: subdir
      default: ""
    - name: yaml
      default: "requirements.yaml"
    - name: path-expression
      default: "dependencies[?(@.name == '${APP_NAME}')].version"
    - name: tools-image
      default: garagecatalyst/ibmcloud-dev:1.1.3
  volumes:
    - name: source
      emptyDir: {}
  stepTemplate:
    volumeMounts:
      - name: source
        mountPath: $(params.source-dir)
  steps:
    - name: gitops
      image: $(params.tools-image)
      workingdir: $(params.source-dir)
      env:
        - name: HOME
          value: /home/devops
        - name: GIT_USERNAME
          valueFrom:
            secretKeyRef: 
              name: git-credentials
              key: username
              optional: true
        - name: GIT_PASSWORD
          valueFrom:
            secretKeyRef: 
              name: git-credentials
              key: password
              optional: true
        - name: GIT_USERNAME_CD
          valueFrom:
            secretKeyRef: 
              name: gitops-cd-secret
              key: username
              optional: true
        - name: GIT_PASSWORD_CD
          valueFrom:
            secretKeyRef: 
              name: gitops-cd-secret
              key: password
              optional: true
        - name: GIT_HOST
          valueFrom:
            configMapKeyRef:
              name: gitops-repo
              key: host
              optional: true
        - name: GIT_ORG
          valueFrom:
            configMapKeyRef:
              name: gitops-repo
              key: org
              optional: true
        - name: GIT_REPO
          valueFrom:
            configMapKeyRef:
              name: gitops-repo
              key: repo
              optional: true
      script: |
          #!/usr/bin/env bash
          set -ex

          BRANCH="$(params.git-branch)"
          APP_NAME="$(params.app-name)"
          PATH_EXPRESSION="$(params.path-expression)"
          SUBDIR="$(params.subdir)"
          if [[ -z "${SUBDIR}" ]]; then
            SUBDIR="$(params.app-name)"
          fi
          YAML_FILE="$(params.yaml)"
          VERSION="$(params.version)"

          if [[ -z "${GIT_HOST}" ]] || [[ -z "${GIT_ORG}" ]] || [[ -z "${GIT_REPO}" ]]; then
              echo "GitOps repo has not been configured with confimap gitops-repo. Skipping trigger step"
              exit 0
          fi

          set +x
          if [[ -n "${GIT_USERNAME_CD}" ]]; then
            GIT_AUTH_USER="${GIT_USERNAME_CD}"
            GIT_AUTH_PWD="${GIT_PASSWORD_CD}"
          elif [[ -n "${GIT_USERNAME}" ]]; then
            GIT_AUTH_USER="${GIT_USERNAME}"
            GIT_AUTH_PWD="${GIT_PASSWORD}"
          else
            echo "Credentials for GitOps repo not set in secret gitops-cd-secret or git-credentials"
            exit 1
          fi
          set -x
          
          git config --global user.email "gitops@cloudnativetoolkit.dev"
          git config --global user.name "Cloud Native Toolkit Pipeline"
          echo "Cloning repo: https://${GIT_AUTH_USER}:xxxx@${GIT_HOST}/${GIT_ORG}/${GIT_REPO}"
          set +x
          GIT_URL="https://${GIT_AUTH_USER}:${GIT_AUTH_PWD}@${GIT_HOST}/${GIT_ORG}/${GIT_REPO}"
          git clone -b ${BRANCH} ${GIT_URL} gitops_cd
          set -x
          
          cd gitops_cd/${SUBDIR}

          echo "Requirements before update"
          cat "./${YAML_FILE}"

          # TODO avoid using igc to use yq
          npm i -g @ibmgaragecloud/cloud-native-toolkit-cli
          igc yq w "./${YAML_FILE}" "${PATH_EXPRESSION}" ${VERSION} -i

          echo "Requirements after update"
          cat "./${YAML_FILE}"

          if [[ $(git status -s | wc -l) -eq 0 ]]; then
            echo "No changes"
            exit 0
          fi

          git add -u
          git commit -m "Updates ${APP_NAME} to ${VERSION}"
          git push -v
