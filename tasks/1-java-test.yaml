apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: igc-java-gradle-test
spec:
  inputs:
    resources:
      - name: source
        type: git
    params:
      - name: gradle-image
        type: string
        default: gradle:jdk11
  stepTemplate:
    env:
      - name: GRADLE_USER_HOME
        value: $(inputs.resources.source.path)
  steps:
    - name: build
      image: $(inputs.params.gradle-image)
      workingdir: $(inputs.resources.source.path)
      command: ["/bin/bash"]
      args:
        - -c
        - |
          set -e
          ./gradlew assemble --no-daemon
    - name: test
      image: $(inputs.params.gradle-image)
      workingdir: $(inputs.resources.source.path)
      command: ["/bin/bash"]
      args:
        - -c
        - |
          set -e
          ./gradlew testClasses --no-daemon
    - name: sonar-scan
      image: $(inputs.params.gradle-image)
      workingdir: $(inputs.resources.source.path)
      envFrom:
        - configMapRef:
            name: sonarqube-config
            optional: true
        - secretRef:
            name: sonarqube-access
            optional: true
      env:
        - name: SONAR_USER_HOME
          value: $(inputs.resources.source.path)
      command: ["/bin/bash"]
      args:
        - -c
        - |
          set -e
          if [[ $(./gradlew tasks --all | grep -E "^sonarqube") ]]; then
              echo "SonarQube task found"
          else
              echo "Skipping SonarQube step, no task defined"
              exit 0
          fi

          if [[ -n "${SONARQUBE_URL}" ]] && [[ -n "${SONARQUBE_USER}" ]] && [[ -n "${SONARQUBE_PASSWORD}" ]]; then
              ./gradlew -Dsonar.login=${SONARQUBE_USER} -Dsonar.password=${SONARQUBE_PASSWORD} -Dsonar.host.url=${SONARQUBE_URL} sonarqube
          else 
              echo "Skipping SonarQube step, configuration not provided"
          fi
