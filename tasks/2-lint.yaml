apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: ibm-hadolint
  annotations:
    description: Executes logic to build, tag and push a container image using the intermediate sha tag to the image-url
    app.openshift.io/description: Executes logic to build, tag and push a container image using the intermediate sha tag to the image-url
    app.openshift.io/vcs-uri: https://github.com/IBM/ibm-garage-tekton-tasks
    app.openshift.io/vcs-ref: master
  labels:
    version: 0.0.0
spec:
  params:
    - name: git-url
    - name: git-revision
      default: master
    - name: source-dir
      default: /source
    - name: DOCKERFILE
      default: Dockerfile
    - name: CONTEXT
      default: .
    - name: LINT_IMAGE
      default: hadolint/hadolint
  volumes:
    - name: source
      emptyDir: {}
  stepTemplate:
    volumeMounts:
      - name: source
        mountPath: $(params.source-dir)
  steps:
    - name: git-clone
      image: alpine/git
      env:
        - name: GIT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: git-credentials
              key: password
              optional: true
        - name: GIT_USERNAME
          valueFrom:
            secretKeyRef:
              name: git-credentials
              key: username
              optional: true
      script: |
        set +x
        if [[ -n "${GIT_USERNAME}" ]] && [[ -n "${GIT_PASSWORD}" ]]; then
            git clone "https://${GIT_USERNAME}:${GIT_PASSWORD}@$(echo $(params.git-url) | awk -F 'https://' '{print $2}')" $(params.source-dir)
        else
            set -x
            git clone $(params.git-url) $(params.source-dir)
        fi
        set -x
        cd $(params.source-dir)
        git checkout $(params.git-revision)
    - name: lint
      image: $(params.LINT_IMAGE)
      workingdir: $(params.source-dir)      
      env:
        - name: HADOLINT_CFG
          valueFrom:
            configMapKeyRef:
              name: hadolint-config
              key: HADOLINT_CFG
              optional: true
      script: | 
        if [ -n "${HADOLINT_CFG}" ]; then
          hadolint --config ${HADOLINT_CFG} $(params.DOCKERFILE)
        else
          hadolint $(params.DOCKERFILE)
        fi

