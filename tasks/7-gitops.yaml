apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: igc-gitops
  labels:
    version: 0.0.0
spec:
  inputs:
    resources:
      - name: source
        type: git
      - name: image
        type: image
    params:
      - name: js-image
        type: string
        default: docker.io/node:12-stretch
      - name: tools-image
        type: string
        default: garagecatalyst/ibmcloud-dev:1.0.10
  steps:
    - name: setup
      image: $(inputs.params.js-image)
      workingdir: $(inputs.resources.source.path)
      command: ["/bin/bash"]
      env:
        - name: BRANCH
          value: "$(inputs.resources.source.revision)"
      args:
        - -c
        - |
          set -x
          set +e

          git fetch --unshallow
          git fetch --tags
          git tag -l

          git checkout ${BRANCH}

          echo "IMAGE_VERSION=$(git describe --abbrev=0 --tags)" > ./env-config
          echo "IMAGE_NAME=$(basename -s .git `git config --get remote.origin.url` | tr '[:upper:]' '[:lower:]' | sed 's/_/-/g')" >> ./env-config

          cat ./env-config
    - name: gitops
      image: $(inputs.params.tools-image)
      workingdir: $(inputs.resources.source.path)
      env:
        - name: HOME
          value: /home/devops
        - name: GIT_AUTH_USER
          valueFrom:
            secretKeyRef:
              name: git-credentials
              key: username
              optional: true
        - name: GIT_AUTH_PWD
          valueFrom:
            secretKeyRef:
              name: git-credentials
              key: password
              optional: true
      envFrom:
        - configMapRef:
            name: gitops-cd-secret
            optional: true
        - configMapRef:
            name: gitops-repo
            optional: true
      command: ["/bin/bash"]
      args:
        - -c
        - |
          set -e
          set -x

          if [[ -z "${host}" ]] || [[ -z "${org}" ]] || [[ -z "${repo}" ]]; then
              echo "GitOps repo has not been configured. Skipping trigger step"
              exit 0
          fi

          if [[ -z "${GIT_AUTH_USER}" ]] || [[ -z "${GIT_AUTH_PWD}" ]]; then
              echo "Credentials for GitOps repo not set"
              exit 1
          fi

          if [[ -z "${branch}" ]]; then
              branch="master"
          fi

          . ./env-config

          git config --global user.email "cloud-native-toolkit@example.com"
          git config --global user.name "Cloud Native Toolkit Pipeline"

          GIT_URL="https://${GIT_AUTH_USER}:${GIT_AUTH_PWD}@${host}/${org}/${repo}"

          echo "Cloning repo: https://${GIT_AUTH_USER}:xxxx@${host}/${org}/${repo}"

          git clone -b ${branch} ${GIT_URL} gitops_cd
          cd gitops_cd

          echo "Requirements before update"
          cat "./${IMAGE_NAME}/requirements.yaml"

          # TODO avoid using igc to use yq
          npm i -g @garage-catalyst/ibm-garage-cloud-cli
          igc yq w ./${IMAGE_NAME}/requirements.yaml "dependencies[?(@.name == '${IMAGE_NAME}')].version" ${IMAGE_VERSION} -i

          echo "Requirements after update"
          cat "./${IMAGE_NAME}/requirements.yaml"

          if [[ $(git status -s | wc -l) -eq 0 ]]; then
            echo "No changes"
            exit 0
          fi

          git add -u
          git commit -m "Updates ${IMAGE_NAME} to ${IMAGE_VERSION}"
          git push -v
