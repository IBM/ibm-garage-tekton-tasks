apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: ibm-img-release
  annotations:
    description: Tags the git repository and releases the intermediate container image with the version tag
    app.openshift.io/description: Tags the git repository and releases the intermediate container image with the version tag
    app.openshift.io/vcs-uri: https://github.com/IBM/ibm-garage-tekton-tasks
    app.openshift.io/vcs-ref: master
  labels:
    version: 0.0.0
spec:
  params:
    - name: image-from
      default: ""
    - name: image-to
      default: ""
    - name: SKOPEO_IMAGE
      default: quay.io/containers/skopeo:v1.1.0
  volumes:
    - name: varlibcontainers
      emptyDir: {}
  steps:
    - name: image-tag
      image: $(params.SKOPEO_IMAGE)
      env:
        - name: REGISTRY_USER
          valueFrom:
            secretKeyRef:
              name: ibmcloud-apikey
              key: REGISTRY_USER
              optional: true
        - name: REGISTRY_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ibmcloud-apikey
              key: APIKEY
              optional: true
      volumeMounts:
        - mountPath: /var/lib/containers
          name: varlibcontainers
      securityContext:
        privileged: true
      script: |
        IMAGE_FROM="$(params.image-from)"
        REGISTRY_SERVER_FROM=$(echo "${IMAGE_FROM}" | awk -F / '{print $1}')
        IMAGE_TO="$(params.image-to)"
        REGISTRY_SERVER_TO=$(echo "${IMAGE_TO}" | awk -F / '{print $1}')

        echo "Tagging ${IMAGE_FROM} as ${IMAGE_TO}"
        if [[ -n "${REGISTRY_USER}" ]] && [[ -n "${REGISTRY_PASSWORD}" ]] && [[ "${REGISTRY_SERVER_FROM}" != "image-registry.openshift-image-registry.svc:5000" ]]; then
          IMAGE_FROM_CREDS="--src-creds ${REGISTRY_USER}:${REGISTRY_PASSWORD}"
        fi
        if [[ -n "${REGISTRY_USER}" ]] && [[ -n "${REGISTRY_PASSWORD}" ]] && [[ "${REGISTRY_SERVER_TO}" != "image-registry.openshift-image-registry.svc:5000" ]]; then
          IMAGE_TO_CREDS="--dest-creds ${REGISTRY_USER}:${REGISTRY_PASSWORD}"
        fi
        if [[ "${REGISTRY_SERVER_FROM}" = "image-registry.openshift-image-registry.svc:5000" ]]; then
          IMAGE_FROM_TLS="--src-tls-verify=false"
        fi
        if [[ "${REGISTRY_SERVER_TO}" = "image-registry.openshift-image-registry.svc:5000" ]]; then
          IMAGE_TO_TLS="--dest-tls-verify=false"
        fi
        
        skopeo copy ${IMAGE_FROM_CREDS} ${IMAGE_FROM_TLS} ${IMAGE_TO_CREDS} ${IMAGE_TO_TLS} docker://${IMAGE_FROM} docker://${IMAGE_TO}
