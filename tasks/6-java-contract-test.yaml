apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: ibm-gradle-pact-verify
  annotations:
    description: Performs pact verification on the service provider
    app.openshift.io/description: Performs pact verification on the service provider
    app.openshift.io/vcs-uri: https://github.com/IBM/ibm-garage-tekton-tasks
    app.openshift.io/vcs-ref: master
  labels:
    version: 0.0.0
spec:
  params:
    - name: git-url
    - name: git-revision
      default: master
    - name: source-dir
      default: /source
    - name: service-protocol
      default: "http"
    - name: service-host
    - name: service-port
      default: "80"
    - name: gradle-image
      default: quay.io/ibmgaragecloud/gradle:jdk11
  volumes:
    - name: source
      emptyDir: {}
  stepTemplate:
    volumeMounts:
      - name: source
        mountPath: $(params.source-dir)
  steps:
    - name: git-clone
      image: quay.io/ibmgaragecloud/alpine-git
      env:
        - name: GIT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: git-credentials
              key: password
              optional: true
        - name: GIT_USERNAME
          valueFrom:
            secretKeyRef:
              name: git-credentials
              key: username
              optional: true
      script: |
        set +x
        if [[ -n "${GIT_USERNAME}" ]] && [[ -n "${GIT_PASSWORD}" ]]; then
            git clone "$(echo $(params.git-url) | awk -F '://' '{print $1}')://${GIT_USERNAME}:${GIT_PASSWORD}@$(echo $(params.git-url) | awk -F '://' '{print $2}')" $(params.source-dir)
        else
            set -x
            git clone $(params.git-url) $(params.source-dir)
        fi
        set -x
        cd $(params.source-dir)
        git checkout $(params.git-revision)
    - name: pact-verify
      image: $(params.gradle-image)
      workingDir: $(params.source-dir)
      env:
        - name: GRADLE_USER_HOME
          value: $(params.source-dir)
        - name: PACTBROKER_URL
          valueFrom:
            secretKeyRef:
              name: pactbroker-access
              key: PACTBROKER_URL
              optional: true
        - name: PACTBROKER_USER
          valueFrom:
            secretKeyRef:
              name: pactbroker-access
              key: PACTBROKER_USER
              optional: true
        - name: PACTBROKER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pactbroker-access
              key: PACTBROKER_PASSWORD
              optional: true
      script: |
          #!/usr/bin/env bash
          set -ex

          if [[ -z "${PACTBROKER_URL}" ]]; then
            echo "PactBroker url not set. Skipping pact verification"
            exit 0
          fi

          if ./gradlew tasks --all | grep -Eq "^pactVerify"; then
              echo "Pact Verify task found"
          else
              echo "Skipping Pact Verify step, no task defined"
              exit 0
          fi

          PROTOCOL=$(params.service-protocol)
          HOST=$(params.service-host)
          PORT=$(params.service-port)

          ./gradlew pactVerify \
            -PpactBrokerUrl=${PACTBROKER_URL} \
            -PpactProtocol=${PROTOCOL} \
            -PpactHost=${HOST} \
            -PpactPort=${PORT} \
            -Ppact.verifier.publishResults=true
