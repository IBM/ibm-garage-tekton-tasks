name: Verify

on:
  pull_request_target:
    branches: [ main ]

jobs:
  setup:
    runs-on: ubuntu-latest
    container:
      image: quay.io/ibmgaragecloud/ibmcloud-dev:v2.0.4
      options: -u 0

    outputs:
      project: ${{steps.setup.outputs.project}}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2

      - id: setup
        run: |
          BRANCH=${GITHUB_REF#refs/heads/}
          echo "Running against branch: ${BRANCH}"
          echo "::set-output name=branch::${BRANCH}"
          echo "::set-output name=project::tools-${BRANCH}"

      - name: Cluster login
        run: oc login -u ${{ secrets.CLUSTER_USER }} -p ${{ secrets.CLUSTER_PASSWORD }} ${{ secrets.CLUSTER_SERVER }}

      - name: Setup tools (eventually should be moved to image)
        run: curl -sL shell.cloudnativetoolkit.dev | sh - && . ~/.bashrc

      - name: Create project
        run: |
          oc sync ${{steps.setup.outputs.project}}
          oc apply -f tasks/
          oc apply -f pipelines/

  deploy:
    runs-on: ubuntu-latest
    container:
      image: quay.io/ibmgaragecloud/ibmcloud-dev:v2.0.4
      options: -u 0
    needs: setup

    strategy:
      matrix:
        projects:
         - https://github.com/IBM/template-node-typescript

    steps:
      - name: Cluster login
        run: oc login -u ${{ secrets.CLUSTER_USER }} -p ${{ secrets.CLUSTER_PASSWORD }} ${{ secrets.CLUSTER_SERVER }}

      - name: Setup tools (eventually should be moved to image)
        run: curl -sL shell.cloudnativetoolkit.dev | sh - && . ~/.bashrc

      - name: Register pipeline - ${{ matrix.projects }}
        run: |
          oc project ${{steps.setup.outputs.project}}
          igc pipeline -t ${{steps.setup.outputs.project}} --tekton ${{ matrix.projects }} -p scan-image=false

  cleanup:
    runs-on: ubuntu-latest
    container:
      image: quay.io/ibmgaragecloud/ibmcloud-dev:v2.0.4
      options: -u 0
    needs: [setup, deploy]

    if: ${{ always() }}

    steps:
      - name: Cluster login
        run: oc login -u ${{ secrets.CLUSTER_USER }} -p ${{ secrets.CLUSTER_PASSWORD }} ${{ secrets.CLUSTER_SERVER }}

      - name: Remove project
        run: oc delete project ${{needs.setup.outputs.project}}

